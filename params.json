{
  "name": "Qmworks",
  "tagline": "This library tackles the construction and efficient execution of computational chemistry workflows",
  "body": "\r\n================\r\nQMWorks\r\n================\r\n\r\n\r\nMotivation\r\n==========\r\nResearch on modern computational quantum chemistry relies on a set of computational\r\ntools to carry out calculations. The complexity of the calculations usually requires \r\nintercommunication between the aforementioned tools, such communication is usually done \r\nthrough shell scripts that try to automate input/output actions like: launching \r\nthe computations in a cluster, reading the resulting output and feeding the relevant\r\nnumerical result to another program. Such scripts are difficult to maintain and extend,\r\nrequiring a significant programming expertise to work with them. Being then desirable a\r\nset of automatic and extensible tools that allows to perform complex simulations in\r\nheterogeneous hardware platforms.\r\n\r\nThis library tackles the construction and efficient execution of computational chemistry workflows.\r\nThis allows computational chemists to use the emerging massively parallel compute environments in\r\nan easy manner and focus on interpretation of scientific data rather than on tedious job submission\r\nprocedures and manual data processing. \r\n\r\nDescription\r\n===========\r\nThis library consists of a set of modules written in Python 3.5,\r\noffering the following features:\r\n\r\n 1. Quantum chemistry Workflows execution using [Noodles](https://gitlab.pyadf.org/e-science/workflow-engine).\r\n\r\n 2. Automatic input generation for several quantum packages.\r\n \r\n 3. Broadcasting numerical results between quantum chemistry.\r\n\r\n \r\nInstallation\r\n============\r\nFirst check that you have available in your system **Python 3.5**. Otherwise, you can download it from [here](https://www.python.org/downloads/) \r\nBecause **QMWorks** depends on a set of libraries that are not pat of the python ecosystem, you need first\r\nto install the dependencies using a virtual environment. Finally, you can proceed to the package installation.\r\n\r\n\r\n\r\nInstallation using a virtual environment (recommended)\r\n======================================================\r\n\r\n- Download[miniconda](http://conda.pydata.org/miniconda.html) for python 3.5. Also you can install the complete [anaconda](https://www.continuum.io/downloads) version.\r\n\r\n- Install according to: [install Conda](http://conda.pydata.org/docs/install/quick.html)installConda_. \r\n\r\n- Reopen terminal (or type ``source ~/.bashrc``).\r\n\r\n- Create a new virtual environment using the following commands:\r\n\r\n  - ``conda create -n qmworks python`` \r\n\r\n- Activate the new virtual environment\r\n  \r\n  - ``source activate qmworks``\r\n\r\nTo exit the virtual environment type  ``source deactivate``.\r\n    \r\n    \r\n.. _dependecies:\r\nDependencies installation\r\n-------------------------\r\n\r\nUsing the conda environment the following packages should be installed:    \r\n\r\n\r\n- install [rdkit](http://www.rdkit.org)using the following command:\r\n\r\n  - ``conda install -y -q -c https://conda.anaconda.org/rdkit rdkit``\r\n\r\n- install [HDF5](http://www.h5py.org/ )using conda:\r\n\r\n  -``conda install -c anaconda hdf5``\r\n    \r\n\r\n.. _installation:\r\nPackage installation\r\n--------------------\r\n\r\n    \r\n- Create a new directory *escience* in your home folder.\r\n\r\n- Move to the *escience* folder.\r\n  \r\n- Clone [Plams](https://www.scm.com/documentation/Tutorials/Scripting/first_steps_with_plams/)  using the following commands:\r\n  \r\n   - ``git clone -b escience git@gitlab.pyadf.org:e-science/plams.git``\r\n\r\n- Change to directory *$HOME/escience/plams* and type:\r\n  \r\n  ``pip install .``\r\n     \r\n- Modify the anaconda activation file for Plams adding the following line ``export PLAMSDEFAULTS=$HOME/escience/plams/utils/plams_defaults.py`` to the file \r\n  \r\n  ``$HOME/miniconda3/envs/qmworks/bin/activate`` or\r\n  ``$HOME/anaconda/envs/qmworks/bin/activate``\r\n  \r\n  You can find the path to your activation file running the command ``conda info --envs``.\r\n\r\n- Type in your terminal,\r\n\r\n  ``source activate qmworks``\r\n\r\n- Change to directory *$HOME/escience* and type:\r\n  \r\n  -``pip install https://github.com/SCM-NV/qmworks/tarball/master#egg=qmworks -e git://github.com/NLeSC/noodles.git@devel#egg=Noodles``\r\n\r\nNow you are ready to use *qmworks*. \r\n \r\n\r\n**Notes:**\r\n\r\n- Once the libraries and the virtual environment are installed, you only need to type\r\n  ``source active qmworks`` each time that you want to use the software.\r\n\r\n\r\n\r\n ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}